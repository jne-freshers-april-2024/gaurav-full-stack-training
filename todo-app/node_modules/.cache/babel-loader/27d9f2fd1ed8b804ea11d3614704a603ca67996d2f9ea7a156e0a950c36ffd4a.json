{"ast":null,"code":"var _jsxFileName = \"/home/lnv-0033/Desktop/full-stack-application/todo-app/src/Components/Counter/Counter.jsx\",\n  _s = $RefreshSig$();\nimport './CounterButton.css';\nimport PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Counter() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {\n      by: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {\n      by: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Counter;\nfunction CounterButtonButton({\n  by\n}) {\n  _s();\n  const [count, setCount] = useState(0);\n  function countIncrement() {\n    setCount(count + by);\n  }\n  function countDecrement() {\n    setCount(count - by);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"count\",\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonStyle\",\n        onClick: countIncrement,\n        children: [\"+\", by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonStyle\",\n        onClick: countDecrement,\n        children: [\"-\", by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CounterButtonButton, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c2 = CounterButtonButton;\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nCounterButton.defaultProps = {\n  by: 1\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"CounterButtonButton\");","map":{"version":3,"names":["PropTypes","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","children","fileName","_jsxFileName","lineNumber","columnNumber","by","_c","CounterButtonButton","_s","count","setCount","countIncrement","countDecrement","className","onClick","_c2","CounterButton","propTypes","number","defaultProps","$RefreshReg$"],"sources":["/home/lnv-0033/Desktop/full-stack-application/todo-app/src/Components/Counter/Counter.jsx"],"sourcesContent":["import './CounterButton.css'\nimport PropTypes from 'prop-types';\nimport { useState } from \"react\"\n\nexport default function Counter() {\n    return (\n        <>\n            <Counter />\n            <Counter by={2} />\n            <Counter by={5} />\n        </>\n    )\n}\nfunction CounterButtonButton({ by }) {\n    const [count, setCount] = useState(0);\n    function countIncrement() {\n        setCount(count + by);\n    }\n    function countDecrement() {\n        setCount(count - by);\n    }\n    return (\n        <>\n            <div>\n                <div className=\"count\">{count}</div>\n                <button className=\"buttonStyle\" onClick={countIncrement}>+{by}</button>\n                <button className=\"buttonStyle\" onClick={countDecrement}>-{by}</button>\n            </div>\n        </>\n    )\n}\nCounterButton.propTypes = {\n    by: PropTypes.number\n}\nCounterButton.defaultProps = {\n    by: 1\n}"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAC9B,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA,CAACG,OAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXR,OAAA,CAACG,OAAO;MAACM,EAAE,EAAE;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBR,OAAA,CAACG,OAAO;MAACM,EAAE,EAAE;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACpB,CAAC;AAEX;AAACE,EAAA,GARuBP,OAAO;AAS/B,SAASQ,mBAAmBA,CAAC;EAAEF;AAAG,CAAC,EAAE;EAAAG,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,SAASiB,cAAcA,CAAA,EAAG;IACtBD,QAAQ,CAACD,KAAK,GAAGJ,EAAE,CAAC;EACxB;EACA,SAASO,cAAcA,CAAA,EAAG;IACtBF,QAAQ,CAACD,KAAK,GAAGJ,EAAE,CAAC;EACxB;EACA,oBACIT,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA;MAAAI,QAAA,gBACIJ,OAAA;QAAKiB,SAAS,EAAC,OAAO;QAAAb,QAAA,EAAES;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpCR,OAAA;QAAQiB,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEH,cAAe;QAAAX,QAAA,GAAC,GAAC,EAACK,EAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACvER,OAAA;QAAQiB,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEF,cAAe;QAAAZ,QAAA,GAAC,GAAC,EAACK,EAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE;EAAC,gBACR,CAAC;AAEX;AAACI,EAAA,CAjBQD,mBAAmB;AAAAQ,GAAA,GAAnBR,mBAAmB;AAkB5BS,aAAa,CAACC,SAAS,GAAG;EACtBZ,EAAE,EAAEZ,SAAS,CAACyB;AAClB,CAAC;AACDF,aAAa,CAACG,YAAY,GAAG;EACzBd,EAAE,EAAE;AACR,CAAC;AAAA,IAAAC,EAAA,EAAAS,GAAA;AAAAK,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAL,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}