{"ast":null,"code":"var _jsxFileName = \"/home/lnv-0033/Desktop/full-stack-application/todo-app/src/Components/todo/security/AuthConext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from \"react\";\n\n// 1. Create context at the top position\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthConext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthConext);\n};\n\n// 2. Share the created context with other components\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  // 3. Put some state in the context\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  function login(username, password) {\n    if (username === 'Thinkitive' && password === 'dummy') {\n      setAuthenticated(true);\n      return true;\n    } else {\n      isAuthenticated(false);\n      return false;\n    }\n  }\n  function logout() {\n    setAuthenticated(false);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthConext.Provider, {\n    value: {\n      isAuthenticated,\n      setAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"5SSB8E6XvROKDUFw38DKoZLgQsI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","AuthConext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setAuthenticated","login","username","password","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lnv-0033/Desktop/full-stack-application/todo-app/src/Components/todo/security/AuthConext.jsx"],"sourcesContent":["import { createContext, useState, useContext } from \"react\"\n\n// 1. Create context at the top position\nexport const AuthConext = createContext()\n\nexport const useAuth = () => useContext(AuthConext)\n\n// 2. Share the created context with other components\nexport default function AuthProvider({ children }){\n\n    // 3. Put some state in the context\n    const[isAuthenticated, setAuthenticated] = useState(false)\n\n    function login(username, password){\n        if (username === 'Thinkitive' && password === 'dummy') {\n            setAuthenticated(true)\n           return true;\n        } else {\n            isAuthenticated(false)\n            return false;\n        }\n    }\n\n    function logout(){\n        setAuthenticated(false)\n    }\n\n    return(\n        <AuthConext.Provider value={ {isAuthenticated, setAuthenticated, login, logout} }>\n            { children }\n        </AuthConext.Provider>\n    )\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,UAAU,CAAC;AAAA;;AAEnD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAC;EAAAC,GAAA;EAE9C;EACA,MAAK,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE1D,SAASY,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAC;IAC9B,IAAID,QAAQ,KAAK,YAAY,IAAIC,QAAQ,KAAK,OAAO,EAAE;MACnDH,gBAAgB,CAAC,IAAI,CAAC;MACvB,OAAO,IAAI;IACd,CAAC,MAAM;MACHD,eAAe,CAAC,KAAK,CAAC;MACtB,OAAO,KAAK;IAChB;EACJ;EAEA,SAASK,MAAMA,CAAA,EAAE;IACbJ,gBAAgB,CAAC,KAAK,CAAC;EAC3B;EAEA,oBACIR,OAAA,CAACC,UAAU,CAACY,QAAQ;IAACC,KAAK,EAAG;MAACP,eAAe;MAAEC,gBAAgB;MAAEC,KAAK;MAAEG;IAAM,CAAG;IAAAP,QAAA,EAC3EA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE9B;AAACZ,GAAA,CAxBuBF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}